---
import { supabase } from '../../lib/supabase';
import type { Digest, Article, Comment } from '../../lib/types';
import SubscribeForm from '../../components/SubscribeForm.astro';

const { id } = Astro.params;

const { data: digest } = await supabase
  .from('digests_with_counts')
  .select('*')
  .eq('id', id)
  .single();

const { data: comments } = await supabase
  .from('comments')
  .select('*')
  .eq('digest_id', id)
  .eq('approved', true)
  .order('created_at', { ascending: false });

// Get related digests (same category, exclude current)
const { data: relatedDigests } = await supabase
  .from('digests_with_counts')
  .select('*')
  .eq('status', 'published')
  .eq('category', digest?.category || '')
  .neq('id', id)
  .order('published_date', { ascending: false })
  .limit(3);

if (!digest) {
  return Astro.redirect('/');
}

const CATEGORY_COLORS = {
  ml_monday: 'bg-blue-100 text-blue-800',
  tech_tuesday: 'bg-green-100 text-green-800',
  web_wednesday: 'bg-purple-100 text-purple-800',
  thought_thursday: 'bg-yellow-100 text-yellow-800',
  fun_friday: 'bg-pink-100 text-pink-800',
};

const CATEGORY_NAMES = {
  ml_monday: 'ML Monday',
  tech_tuesday: 'Tech Tuesday',
  web_wednesday: 'Web Wednesday',
  thought_thursday: 'Thought Thursday',
  fun_friday: 'Fun Friday',
};
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{digest.title} - AI News Blog</title>
  <link rel="stylesheet" href="/src/styles/global.css">
</head>
<body class="bg-gray-50">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <a href="/" class="text-blue-600 hover:text-blue-800 mb-6 inline-block">&larr; Back to all digests</a>
    
    <article class="bg-white rounded-lg shadow-md p-8 mb-8">
      <div class="flex items-center gap-4 mb-6">
        <span class={`px-3 py-1 rounded-full text-sm font-medium ${CATEGORY_COLORS[digest.category]}`}>
          {CATEGORY_NAMES[digest.category]}
        </span>
        <time class="text-gray-600">
          {new Date(digest.published_date).toLocaleDateString('en-US', { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </time>
      </div>

      <h1 class="text-4xl font-bold text-gray-900 mb-8">{digest.title}</h1>

      <div class="space-y-8">
        {digest.content.map((article: Article, index: number) => (
          <div class="border-l-4 border-blue-500 pl-6">
            <h3 class="text-xl font-semibold text-gray-900 mb-2">
              {index + 1}. <a href={article.url} target="_blank" rel="noopener noreferrer" class="hover:text-blue-600">
                {article.title}
              </a>
            </h3>
            <p class="text-gray-700 mb-2">{article.summary}</p>
            <p class="text-sm text-gray-500">Source: {article.source}</p>
          </div>
        ))}
      </div>

      <div class="mt-8 pt-8 border-t border-gray-200">
        <div class="flex items-center justify-between flex-wrap gap-4">
          <div class="flex items-center gap-6">
            <button id="thumbs-up-btn" class="flex items-center gap-2 px-4 py-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
              <span>üëç</span>
              <span id="thumbs-up-count">{digest.thumbs_up || 0}</span>
            </button>
            <button id="middle-finger-btn" class="flex items-center gap-2 px-4 py-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
              <span>üñï</span>
              <span id="middle-finger-count">{digest.middle_finger || 0}</span>
            </button>
            <span class="text-gray-600">üí¨ {digest.comment_count || 0} comments</span>
            <span class="text-gray-600">üëÅ {digest.view_count || 0} views</span>
          </div>
          
          <div class="flex items-center gap-2">
            <span class="text-gray-600 text-sm mr-2">Share:</span>
            <button id="share-linkedin" class="p-2 text-gray-600 hover:text-blue-600 transition-colors" title="Share on LinkedIn">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </button>
            <button id="share-twitter" class="p-2 text-gray-600 hover:text-blue-400 transition-colors" title="Share on Twitter/X">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
            </button>
            <button id="share-email" class="p-2 text-gray-600 hover:text-green-600 transition-colors" title="Share via Email">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
              </svg>
            </button>
            <button id="share-copy" class="p-2 text-gray-600 hover:text-purple-600 transition-colors" title="Copy link">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
      
      <script define:vars={{ digestId: digest.id }}>
        const thumbsUpBtn = document.getElementById('thumbs-up-btn');
        const middleFingerBtn = document.getElementById('middle-finger-btn');
        const thumbsUpCount = document.getElementById('thumbs-up-count');
        const middleFingerCount = document.getElementById('middle-finger-count');

        async function addReaction(type) {
          try {
            const response = await fetch(`/api/reactions/${digestId}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ reactionType: type })
            });

            const data = await response.json();

            if (response.ok) {
              thumbsUpCount.textContent = data.thumbsUp;
              middleFingerCount.textContent = data.middleFinger;
              thumbsUpBtn.disabled = true;
              middleFingerBtn.disabled = true;
              localStorage.setItem(`reacted_${digestId}`, 'true');
            } else if (response.status === 409) {
              alert('You have already reacted to this digest');
              thumbsUpBtn.disabled = true;
              middleFingerBtn.disabled = true;
            } else {
              alert('Error: ' + data.error);
            }
          } catch (error) {
            console.error('Error adding reaction:', error);
            alert('Failed to add reaction. Please try again.');
          }
        }

        // Check if user has already reacted
        if (localStorage.getItem(`reacted_${digestId}`)) {
          thumbsUpBtn.disabled = true;
          middleFingerBtn.disabled = true;
        }

        thumbsUpBtn.addEventListener('click', () => addReaction('thumbs_up'));
        middleFingerBtn.addEventListener('click', () => addReaction('middle_finger'));

        // Share buttons
        const pageUrl = window.location.href;
        const pageTitle = document.title;
        
        document.getElementById('share-linkedin')?.addEventListener('click', () => {
          const url = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(pageUrl)}`;
          window.open(url, '_blank', 'width=600,height=400');
        });

        document.getElementById('share-twitter')?.addEventListener('click', () => {
          const text = `Check out this AI news digest: ${pageTitle}`;
          const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(pageUrl)}&hashtags=AI,MachineLearning`;
          window.open(url, '_blank', 'width=600,height=400');
        });

        document.getElementById('share-email')?.addEventListener('click', () => {
          const subject = `AI News Digest: ${pageTitle}`;
          const body = `I thought you might find this interesting:\n\n${pageUrl}`;
          window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
        });

        document.getElementById('share-copy')?.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(pageUrl);
            const btn = document.getElementById('share-copy');
            const originalHTML = btn.innerHTML;
            btn.innerHTML = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>';
            setTimeout(() => {
              btn.innerHTML = originalHTML;
            }, 2000);
          } catch (err) {
            alert('Failed to copy link');
          }
        });
      </script>
    </article>

    <div class="bg-white rounded-lg shadow-md p-8">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Comments</h2>
      
      <!-- Comment Form -->
      <form id="comment-form" class="mb-8 space-y-4">
        <div>
          <label for="author-name" class="block text-sm font-medium text-gray-700 mb-1">Name *</label>
          <input
            type="text"
            id="author-name"
            name="authorName"
            required
            maxlength="100"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Your name"
          />
        </div>
        
        <div>
          <label for="author-email" class="block text-sm font-medium text-gray-700 mb-1">Email * (never shown publicly)</label>
          <input
            type="email"
            id="author-email"
            name="authorEmail"
            required
            maxlength="200"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="your@email.com"
          />
        </div>
        
        <div>
          <label for="author-website" class="block text-sm font-medium text-gray-700 mb-1">Website (optional)</label>
          <input
            type="url"
            id="author-website"
            name="authorWebsite"
            maxlength="200"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="https://yoursite.com"
          />
        </div>
        
        <div>
          <label for="comment-content" class="block text-sm font-medium text-gray-700 mb-1">Comment *</label>
          <textarea
            id="comment-content"
            name="content"
            required
            maxlength="2000"
            rows="4"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Share your thoughts..."
          ></textarea>
          <p class="text-sm text-gray-500 mt-1">Comments require moderation before appearing.</p>
        </div>
        
        <button
          type="submit"
          class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Post Comment
        </button>
        <div id="comment-status" class="hidden"></div>
      </form>

      <!-- Existing Comments -->
      <div id="comments-list">
        {comments && comments.length > 0 ? (
          <div class="space-y-6">
            {comments.map((comment: Comment) => (
              <div class="border-b border-gray-200 pb-6 last:border-b-0">
                <div class="flex items-center gap-2 mb-2">
                  <span class="font-semibold text-gray-900">{comment.author_name}</span>
                  {comment.author_website && (
                    <>
                      <span class="text-gray-400">‚Ä¢</span>
                      <a href={comment.author_website} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 text-sm">
                        Website
                      </a>
                    </>
                  )}
                  <span class="text-gray-400">‚Ä¢</span>
                  <span class="text-gray-500 text-sm">
                    {new Date(comment.created_at).toLocaleDateString()}
                  </span>
                </div>
                <p class="text-gray-700 whitespace-pre-wrap">{comment.content}</p>
              </div>
            ))}
          </div>
        ) : (
          <p class="text-gray-600">No comments yet. Be the first to comment!</p>
        )}
      </div>
      
      <script define:vars={{ digestId: digest.id }}>
        const form = document.getElementById('comment-form');
        const status = document.getElementById('comment-status');

        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const submitBtn = form.querySelector('button[type="submit"]');
          submitBtn.disabled = true;
          submitBtn.textContent = 'Posting...';
          
          const formData = new FormData(form);
          const data = {
            authorName: formData.get('authorName'),
            authorEmail: formData.get('authorEmail'),
            authorWebsite: formData.get('authorWebsite'),
            content: formData.get('content')
          };

          try {
            const response = await fetch(`/api/comments/${digestId}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
              status.className = 'mt-4 p-4 bg-green-100 text-green-800 rounded-lg';
              status.textContent = result.message;
              status.classList.remove('hidden');
              form.reset();
            } else {
              status.className = 'mt-4 p-4 bg-red-100 text-red-800 rounded-lg';
              status.textContent = 'Error: ' + result.error;
              status.classList.remove('hidden');
            }
          } catch (error) {
            console.error('Error posting comment:', error);
            status.className = 'mt-4 p-4 bg-red-100 text-red-800 rounded-lg';
            status.textContent = 'Failed to post comment. Please try again.';
            status.classList.remove('hidden');
          } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Post Comment';
          }
        });
      </script>
    </div>

    <!-- Related Digests -->
    {relatedDigests && relatedDigests.length > 0 && (
      <div class="bg-white rounded-lg shadow-md p-8">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Digests</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {relatedDigests.map((related: Digest) => (
            <a href={`/digest/${related.id}`} class="block group">
              <div class="border border-gray-200 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <h3 class="font-semibold text-gray-900 group-hover:text-blue-600 mb-2">
                  {related.title}
                </h3>
                <p class="text-sm text-gray-600">
                  {new Date(related.published_date).toLocaleDateString()}
                </p>
                <div class="flex gap-4 text-sm text-gray-500 mt-2">
                  <span>üëç {related.thumbs_up || 0}</span>
                  <span>üí¨ {related.comment_count || 0}</span>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}

    <SubscribeForm />
  </div>
</body>
</html>

